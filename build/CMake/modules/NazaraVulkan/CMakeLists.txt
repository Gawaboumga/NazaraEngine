project("NazaraVulkan")

if (WIN32)
	set (OS_VULKAN_SPECIFICATION "Win32")
endif ()

add_definitions(-DVK_NO_PROTOTYPES)
if (UNIX)
	#add_definitions(-DVK_USE_PLATFORM_MIR_KHR)
	add_definitions(-DVK_USE_PLATFORM_XCB_KHR)
	#add_definitions(-DVK_USE_PLATFORM_XLIB_KHR)
	#add_definitions(-DVK_USE_PLATFORM_WAYLAND_KHR)
elseif (WIN32)
	add_definitions(-DVK_USE_PLATFORM_WIN32_KHR)
else ()
	message(SEND_ERROR "No OS implementation")
endif ()

set(NAZARA_SOURCE_VULKAN_DIRECTORY ${NAZARA_SOURCE_DIRECTORY}Nazara/Vulkan/)

include_directories(
		${NAZARA_INCLUDE_DIRECTORY}
		${NAZARA_EXTLIBS_INCLUDE_DIRECTORY}
	)

file(GLOB VULKAN_SOURCE
		${NAZARA_SOURCE_VULKAN_DIRECTORY}Debug/*.cpp
		${NAZARA_SOURCE_VULKAN_DIRECTORY}${OS_VULKAN_SPECIFICATION}/*.cpp
		${NAZARA_SOURCE_VULKAN_DIRECTORY}*.cpp
	)

link_directories(${NAZARA_EXTLIBS_OUTPUT_DIRECTORY})

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${NAZARA_LIBS_OUTPUT_DIRECTORY})

add_library(${NAZARA_LIBRARY_NAME}Vulkan${NAZARA_LIBRARY_EXTENSION} ${BUILD_SHARED_LIBS} ${VULKAN_SOURCE})

target_link_libraries(${NAZARA_LIBRARY_NAME}Vulkan${NAZARA_LIBRARY_EXTENSION})
